(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{108:function(e,t,o){"use strict";o.r(t);o(20),o(11),o(39);var n={expand:"展开全文",collapse:"收起全文",projectIntro:["我也非常喜欢造轮子","无论是解决实际问题，还是尝试新技术","生命不息，折腾不止"],projects:o(160).a.reduce((function(e,p){return e[p.id]={title:p.title["zh-CN"]},e}),{})};Object.keys(n.projects).forEach((function(e){n.projects[e].content=o(283)("./".concat(e,"/zh-CN.md"))})),t.default=n},160:function(e,t,o){"use strict";t.a=["saladict","observable-hooks","postcss-safe-important","side-effect-manager","value-enhancer","webextension-store-meta","neutrino-webextension","webpack-target-webextension","hexo-filter-github-emojis","react-resize-reporter","get-selection-more","blog-2019","retux","use-suspensible","weitweet","ext-github-release-notifier","javascript30","projects","leetmark","empty-module-loader"].map((function(e){return Object.assign({id:e},o(161)("./".concat(e,"/meta.json")))}))},161:function(e,t,o){var map={"./blog-2019/meta.json":162,"./empty-module-loader/meta.json":163,"./ext-github-release-notifier/meta.json":164,"./get-selection-more/meta.json":165,"./hexo-filter-github-emojis/meta.json":166,"./javascript30/meta.json":167,"./leetmark/meta.json":168,"./neutrino-webextension/meta.json":169,"./observable-hooks/meta.json":170,"./postcss-safe-important/meta.json":171,"./projects/meta.json":172,"./react-resize-reporter/meta.json":173,"./retux/meta.json":174,"./saladict/meta.json":175,"./side-effect-manager/meta.json":176,"./use-suspensible/meta.json":177,"./value-enhancer/meta.json":178,"./webextension-store-meta/meta.json":179,"./webpack-target-webextension/meta.json":180,"./weitweet/meta.json":181};function n(e){var t=r(e);return o(t)}function r(e){if(!o.o(map,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return map[e]}n.keys=function(){return Object.keys(map)},n.resolve=r,e.exports=n,n.id=161},162:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"CRIMX BLOG","en-US":"CRIMX BLOG"},"url":"https://blog.crimx.com","stack":["gatsby","graphql","react","bulma","sass","netlifycms","netlify"],"badges":{"github":"crimx/blog-2019"},"hideExpand":false}')},163:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Empty Module Loader","en-US":"Empty Module Loader"},"url":"https://github.com/crimx/empty-module-loader","stack":["webpack"],"badges":{"npm":"empty-module-loader"},"hideExpand":true}')},164:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Release Notifier for Github","en-US":"Release Notifier for Github"},"url":"https://github.com/crimx/ext-github-release-notifier","stack":["vue","github-api"],"badges":{"github":"crimx/ext-github-release-notifier","chrome":"gjhmlndokehcbkaockjlgeofgkiaiflg","firefox":"release-notifier-for-github"},"hideExpand":false}')},165:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Get Selection More","en-US":"Get Selection More"},"url":"https://github.com/crimx/get-selection-more","stack":["typescript"],"badges":{"github":"crimx/get-selection-more","npm":"get-selection-more"},"hideExpand":true}')},166:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Hexo Filter Github Emojis","en-US":"Hexo Filter Github Emojis"},"url":"https://github.com/crimx/hexo-filter-github-emojis","stack":["hexo","github-api"],"badges":{"github":"crimx/hexo-filter-github-emojis","npm":"hexo-filter-github-emojis"},"hideExpand":false}')},167:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"JavaScript 30","en-US":"JavaScript 30"},"url":"https://codepen.io/collection/DNdQZw/","stack":["codepen","vanilla-js"],"badges":{},"hideExpand":false}')},168:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Leetmark","en-US":"Leetmark"},"url":"https://github.com/crimx/crx-leetmark","stack":["vanilla-js"],"badges":{"chrome":"pbpcnaodgahdlijbhjeohbjoafbdafdp"},"hideExpand":true}')},169:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Neutrino WebExtension","en-US":"Neutrino WebExtension"},"url":"https://github.com/crimx/neutrino-webextension","stack":["neutrino","webpack"],"badges":{"github":"crimx/neutrino-webextension"},"hideExpand":false}')},170:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Observable Hooks","en-US":"Observable Hooks"},"url":"https://github.com/crimx/observable-hooks","stack":["typescript","react","rxjs"],"badges":{"github":"crimx/observable-hooks","npm":"observable-hooks"},"hideExpand":false}')},171:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"PostCSS Safe Important","en-US":"PostCSS Safe Important"},"url":"https://github.com/crimx/postcss-safe-important","stack":["postcss"],"badges":{"github":"crimx/postcss-safe-important","npm":"postcss-safe-important"},"hideExpand":false}')},172:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"本项目","en-US":"This Project"},"url":"https://github.com/crimx/crimx.github.io","stack":["nuxt","nuxt-i18n","vue"],"badges":{},"hideExpand":false}')},173:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"React Resize Reporter","en-US":"React Resize Reporter"},"url":"https://github.com/crimx/react-resize-reporter","stack":["typescript","react"],"badges":{"github":"crimx/react-resize-reporter","npm":"react-resize-reporter"},"hideExpand":false}')},174:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Retux","en-US":"Retux"},"url":"https://github.com/crimx/retux","stack":["typescript","redux","lerna"],"badges":{"github":"crimx/retux"},"hideExpand":false}')},175:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Saladict 沙拉查词","en-US":"Saladict"},"url":"https://saladict.crimx.com/","stack":["typescript","react","observable-hooks","redux","redux-observable","redux-thunk","rxjs","dexie","i18next","antd","sass","neutrino","storybook"],"badges":{"github":"crimx/ext-saladict","chrome":"cdonnmffkdaoajfknoeeecmchibpmkmg","firefox":"ext-saladict"},"hideExpand":false}')},176:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Side Effect Manager","en-US":"Side Effect Manager"},"url":"https://github.com/crimx/side-effect-manager","stack":["typescript"],"badges":{"github":"crimx/side-effect-manager","npm":"side-effect-manager"},"hideExpand":true}')},177:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Use Suspensible","en-US":"Use Suspensible"},"url":"https://github.com/crimx/use-suspensible","stack":["typescript","react"],"badges":{"github":"crimx/use-suspensible","npm":"use-suspensible"},"hideExpand":false}')},178:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Value Enhancer","en-US":"Value Enhancer"},"url":"https://github.com/crimx/value-enhancer","stack":["typescript"],"badges":{"github":"crimx/value-enhancer","npm":"value-enhancer"},"hideExpand":true}')},179:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Webextension Store Meta","en-US":"Webextension Store Meta"},"url":"https://github.com/crimx/webextension-store-meta","stack":["vanilla-js"],"badges":{"github":"crimx/webextension-store-meta","npm":"webextension-store-meta"},"hideExpand":true}')},180:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"Webpack Target WebExtension","en-US":"Webpack Target WebExtension"},"url":"https://github.com/crimx/webpack-target-webextension","stack":["webpack"],"badges":{"github":"crimx/webpack-target-webextension","npm":"webpack-target-webextension"},"hideExpand":false}')},181:function(e){e.exports=JSON.parse('{"title":{"zh-CN":"小推 WeiTweet","en-US":"WeiTweet"},"url":"https://github.com/crimx/crx-weitweet","stack":["typescript","vue","iview","sass"],"badges":{"github":"crimx/crx-weitweet","chrome":"jcgjbjbbcjgkpdanbnafdbdlbjacdkln","firefox":"weitweet"},"hideExpand":false}')},283:function(e,t,o){var map={"./blog-2019/zh-CN.md":284,"./empty-module-loader/zh-CN.md":285,"./ext-github-release-notifier/zh-CN.md":286,"./get-selection-more/zh-CN.md":287,"./hexo-filter-github-emojis/zh-CN.md":288,"./javascript30/zh-CN.md":289,"./leetmark/zh-CN.md":290,"./neutrino-webextension/zh-CN.md":291,"./observable-hooks/zh-CN.md":292,"./postcss-safe-important/zh-CN.md":293,"./projects/zh-CN.md":294,"./react-resize-reporter/zh-CN.md":295,"./retux/zh-CN.md":296,"./saladict/zh-CN.md":297,"./side-effect-manager/zh-CN.md":298,"./use-suspensible/zh-CN.md":299,"./value-enhancer/zh-CN.md":300,"./webextension-store-meta/zh-CN.md":301,"./webpack-target-webextension/zh-CN.md":302,"./weitweet/zh-CN.md":303};function n(e){var t=r(e);return o(t)}function r(e){if(!o.o(map,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return map[e]}n.keys=function(){return Object.keys(map)},n.resolve=r,e.exports=n,n.id=283},284:function(e,t){e.exports='<p>一个基于 <a target="_blank" rel="nofollow" href="https://jamstack.org/">JAMstack</a> 架构的技术博客。利用 React 框架 <a target="_blank" rel="nofollow" href="https://gatsbyjs.org">GatsbyJS</a> 搭配 <a target="_blank" rel="nofollow" href="https://graphql.org/">GraphQL</a> 开发，使用 <a target="_blank" rel="nofollow" href="https://www.netlifycms.org/">Netlify CMS</a> 管理文章内容并托管在 <a target="_blank" rel="nofollow" href="https://www.netlify.com/">Netlify</a> 平台上。</p>\n<hr class="read-more" />\n\n<p>具体更换原因见博文<a target="_blank" rel="nofollow" href="https://blog.crimx.com/2019/04/18/%E6%90%AD%E5%BB%BA-gatsby-%E5%8D%9A%E5%AE%A2%E4%B8%80%EF%BC%9A%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89-gatsby/">《为什么选 Gatsby》</a>。</p>\n<p>利用 GraphQL 统一管理信息和资源为开发带来了极大的便利。</p>\n<p>Netlify CMS 和 <a target="_blank" rel="nofollow" href="https://utteranc.es">Utterances</a> 实现了文章和评论数据都保存回 Github 上，减少了第三方服务的依赖。</p>\n<p>样式基于一个现代 CSS 框架 <a target="_blank" rel="nofollow" href="https://bulma.io/">Bulma</a>， Sass 模块的设计借鉴了 <a target="_blank" rel="nofollow" href="https://itcss.io/">ITCSS</a> 思想。</p>\n<p>LOGO 图标使用 illustrator 设计，社交图案采用 <a target="_blank" rel="nofollow" href="https://github.com/nullice/NViconsLib_Silhouette">NViconsLib 2</a> ，使用 <a target="_blank" rel="nofollow" href="https://boxy-svg.com/">Boxy SVG</a> 手工编辑，利用 <a target="_blank" rel="nofollow" href="https://icomoon.io/">IcoMoon</a> 合并以及 <a target="_blank" rel="nofollow" href="https://jakearchibald.github.io/svgomg/">SVGOMG</a> 压缩。</p>\n'},285:function(e,t){e.exports='<p>一个可以将特定模块替换为空函数的 webpack loader 。配合 <a target="_blank" rel="nofollow" href="https://webpack.js.org/guides/tree-shaking/">Tree Shaking </a> 可在生成的代码中完全清除。</p>\n'},286:function(e,t){e.exports='<p>一款可以按 major、minor 和 patch 版本来订阅 Github release 的 Chrome / Firefox 扩展。</p>\n<hr class="read-more" />\n\n<p>灵感源于一个 <a target="_blank" rel="nofollow" href="https://github.com/isaacs/github/issues/410#issuecomment-291797759">issue</a> 的讨论。一年后 Github 终于推出了初步的<a target="_blank" rel="nofollow" href="https://blog.github.com/changelog/2018-11-27-watch-releases/">官方支持</a>。</p>\n<p>请求利用 E-Tags 304 （Not Modified）跳转来快速查询。</p>\n<p><img src="https://github.com/crimx/ext-github-release-notifier/wiki/images/screen2.png" alt="screenshot"></p>\n'},287:function(e,t){e.exports="<p>从 <code>window.getSelection()</code> 获取选字以及上下文（所在句子、段落等）。</p>\n"},288:function(e,t){e.exports='<p>Hexo 插件，利用 <a target="_blank" rel="nofollow" href="https://api.github.com/emojis">Github Emojis API</a> 支持在 Markdown 和 HTML 模板中添加语义化的 emojis 。</p>\n<hr class="read-more" />\n\n<p>考虑到可访问性，本插件会生成 emoji 的 unicode 并将字体设为透明，然后在背景图片中添加 Github emoji 图片。当加载失败时恢复字体颜色。</p>\n<p>插件同时提供丰富的配置选项，满足各种不同的需求。</p>\n'},289:function(e,t){e.exports='<p>三十天每天用纯 JavaScript 、CSS 和 HTML 写个小东西，并尝鲜一些新的浏览器 API 。灵感来自于 Wes Bos 的 <a target="_blank" rel="nofollow" href="https://javascript30.com/">JavaScript 30</a> 。他的例子相对简单，我根据自己的能力实现了些更复杂的点子。</p>\n<hr class="read-more" />\n\n<p>比较有意思的如</p>\n<ul>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/YeNKoN">Day 4 Queue*2 = Stack</a> 可视化两个队列实现一个栈。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/QQvKjo">Day 7 Stack*2 = Queue</a> 可视化两个栈实现一个队列。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/RQYVzm">Day 19 Webcam Fun</a> 利用 canvas 变换摄像头数据。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/MQqLVe">Day 20 Levitation Charm</a> 麦克风识别悬浮咒。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/LQMMxq">Day 23 Country Flags Game</a> 基于语音合成的猜国旗游戏。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/yvrdEr">Day 27 Jelly Pickle</a> 手写 spring 算法实现 Q 弹腌黄瓜。</li>\n<li><a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/PQrQQY">Day 29 Digital Clock</a> 基于 CSS 变换的时钟，以及升级版基于 <a target="_blank" rel="nofollow" href="https://github.com/acdlite/recompose">Recompose</a> 和 <a target="_blank" rel="nofollow" href="https://rxjs-dev.firebaseapp.com/">RxJS</a> 的<a target="_blank" rel="nofollow" href="https://codepen.io/straybugs/pen/PRGZBa">计时器</a>。</li>\n</ul>\n'},290:function(e,t){e.exports='<p>一款可以将 <a target="_blank" rel="nofollow" href="https://leetcode.com/problemset/all/">Leetcode</a> 题目转换为 Markdown 的 Chrome 扩展。题目元数据被保存为 Front Matter 格式。</p>\n'},291:function(e,t){e.exports='<p><a target="_blank" rel="nofollow" href="https://neutrinojs.org">Neutrino 9</a> 脚手架插件，开发跨浏览器扩展，支持热更新以及框架 devtools 调试。</p>\n<hr class="read-more" />\n\n<p>目前开发浏览器扩展的流程基本还是刀耕火种的方式：</p>\n<ul>\n<li>引用的 JS 文件和样式文件需要手写到清单文件 <code>manifest.json</code> 中，不能享受打包工具的分块优化。</li>\n<li>各个浏览器的扩展 API 支持不完全一致，<code>manifest.json</code> 内容也不完全相同。</li>\n<li>浏览器对扩展页面访问有限制，故热更新以及框架 devtools 都不能使用。</li>\n</ul>\n<p>所以针对这些问题，我设计了一套自动化解决方案，大大简化了开发流程：</p>\n<ul>\n<li>基于 <a target="_blank" rel="nofollow" href="https://neutrinojs.org">Neutrino 9</a> 脚手架开发插件，可以继承其众多优点：开箱即用，可配置性高（<a target="_blank" rel="nofollow" href="https://github.com/neutrinojs/webpack-chain">Webpack Chain</a>），有丰富的生态，对各种框架、代码规范都有很好的支持。</li>\n<li>通过实现一个<a target="_blank" rel="nofollow" href="https://github.com/crimx/webextensions-emulator">扩展环境模拟器</a>在普通网页中跑扩展页面，成功支持热更新以及框架 devtools 调试。</li>\n<li>不再手动配置清单文件，我编写了一个 Webpack 插件自动将打包后的各个块更新到清单相应的配置中。</li>\n<li>为各个浏览器分别自动打包，自动生成不同的清单配置。</li>\n</ul>\n'},292:function(e,t){e.exports='<p>通过 React hooks 在组件中无缝连接 RxJS Observables 以复用异步逻辑。</p>\n<hr class="read-more" />\n\n<p>为什么要在组件中复用异步逻辑：</p>\n<ul>\n<li>一些只跟当前组件相关的异步逻辑不再需要委托到父组件或者状态管理库，从而达到真正的组件复用。</li>\n<li>React Hooks 紧凑的代码风格可以让逻辑封装到一起，更方便隔离测试。</li>\n<li>使用 RxJS 是因为其成熟丰富的生态，对简单到复杂的异步逻辑都有很好的解决方案。</li>\n</ul>\n<p>相比同类库优势：</p>\n<ul>\n<li>简洁的 API，不仅更容易使用且实现更简洁，同时提高了性能。</li>\n<li>States 和 Props 可以无缝与 Observables 互相转换。</li>\n<li>可对多个 Observables 直接进行各种操作，无论是 hooks 中生成的还是组件以外的。</li>\n<li>Observables 的操作是纯净的，类似于 Redux Observable 的 <a target="_blank" rel="nofollow" href="https://redux-observable.js.org/docs/basics/Epics.html">Epic</a>，可以复用以及单独进行测试。</li>\n<li>支持结合 Suspense 实现 <a target="_blank" rel="nofollow" href="https://observable-hooks.js.org/guide/render-as-you-fetch-suspense.html#observable-suspense-hook">Render-as-You-Fetch</a> 模式。</li>\n<li>完善的测试，API 稳定。</li>\n</ul>\n'},293:function(e,t){e.exports='<p><a target="_blank" rel="nofollow" href="https://github.com/postcss/postcss">PostCSS</a> 插件，安全地为 CSS 中所有样式添加 <code>!important</code> 。已被许多大型项目使用与推荐，如 <a target="_blank" rel="nofollow" href="https://github.com/transloadit/uppy/blob/23f3bf9edcd2248d7d2535a9e29dd48fd70690e7/package.json#L174">Uppy</a>、<a target="_blank" rel="nofollow" href="https://stylelint.io/user-guide/rules/declaration-no-important/">stylelint</a>、<a target="_blank" rel="nofollow" href="https://github.com/yoshuawuyts/vmd/blob/1f220068c1bf69c02f53bb2c8ac308cba3f8ccfb/package.json#L33">vmd</a>、<a target="_blank" rel="nofollow" href="https://github.com/kogg/hovercards/blob/34c4aac817bf67cbfcc98baca999bc4a21259b74/package.json#L136">HoverCards</a> 等。</p>\n<hr class="read-more" />\n\n<p>造这个轮子的原因有三：</p>\n<ol>\n<li>准确性。当时阅读了一些同类工具的源码，基本是基于正则表达式匹配的，这准确性不容易保证。PostCSS 会把 CSS 规则解析为语法树（AST），从而可以达到准确操作。</li>\n<li>安全性。不能盲目添加 <code>!important</code> ，否则可能会<a target="_blank" rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes#!important_in_a_keyframe">破坏样式</a>。现在有了 AST 就可以根据语义判断是否需要改变。</li>\n<li>可配置性。提供灵活的配置实现更细粒度的控制。</li>\n</ol>\n'},294:function(e,t){e.exports='<p>基于 NUXT 生成的静态网站。</p>\n<hr class="read-more" />\n\n<p>利用 SSR （服务器渲染）为每个路由生成了静态页面，故打开页面无需加载 JavaScript 即可开始渲染 DOM ，待 JavaScript 加载完成后由 Vue 接管 DOM 以及 Vue-router 接管路由跳转。</p>\n<p>为项目介绍抽象出共用部分，实现组件复用，每个项目介绍只需简单配置即可添加。</p>\n<p>使用了 nuxt-i18n 自动生成多语言路由，动态加载，每个项目的富文本介绍用 Markdown 编写，使用 <a target="_blank" rel="nofollow" href="https://github.com/peerigon/markdown-loader">markdown-loader</a> 转换为 HTML 加载。</p>\n'},295:function(e,t){e.exports='<p>监听 React 组件尺寸变化。</p>\n<hr class="read-more" />\n\n<p>为什么：</p>\n<ol>\n<li>目前没有完美的解决方案监听 React 组件尺寸变化。</li>\n<li>现有的解决方案要么不稳定要么使用非常啰嗦的 API。</li>\n</ol>\n<p>亮点：</p>\n<ol>\n<li>简洁的 API。</li>\n<li>两种实现方式，共用一套相同的接口。</li>\n</ol>\n'},296:function(e,t){e.exports='<p>简洁、声明式、类型安全（强类型）、可扩展的 TypeScript Redux 架构。</p>\n<hr class="read-more" />\n\n<h2 id="-">特性</h2>\n<ul>\n<li>简洁。借助 TypeScript 的高级特性 Retux 在减少样板代码的同时保持更好的类型推导和自动补全。</li>\n<li>声明式。Action 优先而不是 Action Creator 优先的设计使到代码更加清晰易懂，特别是对项目新成员还有未来的自己。</li>\n<li>类型安全（强类型）。Retux 使用严格的类型。通过 Retux 的工具可以灵活地编写 TypeScript 代码而不会失去类型的严格性。</li>\n<li>可扩展。Retux 模块可以轻易划分为多个同构的子模块。Retux 同时可以在现代引擎上借助元编程进一步提升性能。</li>\n</ul>\n'},297:function(e,t){e.exports='<p>专业划词扩展，其新颖的设计与实现得到大量用户的肯定与喜爱。许多用户留言评价（<a target="_blank" rel="nofollow" href="https://chrome.google.com/webstore/detail/cdonnmffkdaoajfknoeeecmchibpmkmg?hl=en">谷歌留言</a> / <a target="_blank" rel="nofollow" href="https://addons.mozilla.org/zh-CN/firefox/addon/ext-saladict/reviews/">火狐留言</a>）这是其用过最好用的划词扩展。</p>\n<hr class="read-more" />\n\n<p>功能设计的亮点，</p>\n<ol>\n<li>聚合多个词典的结果可以取各所长，并用统一的风格重排显示，极大地方便了交叉查阅词典。</li>\n<li>多重划词模式再结合多种情景模式能让用户快速切换，以不同方式灵活查词。</li>\n<li>生词本保留了查词的上下文并自动获取整句翻译，以保证准确理解、记忆单词。</li>\n<li>高可访问性，兼容各种复杂不一的网页，兼容 iframe 内划词，支持 PDF 划词。</li>\n<li>Unix 哲学，专注查词并提供灵活的接口，<a target="_blank" rel="nofollow" href="https://saladict.crimx.com/manual.html#shortcuts">配合其它工具</a>发挥更强大的功能。</li>\n</ol>\n<p>技术实现的亮点，</p>\n<ol>\n<li>大量使用 <a target="_blank" rel="nofollow" href="https://reactjs.org/docs/hooks-intro.html">React Hooks</a> 为组件复用异步交互逻辑，利用 <a target="_blank" rel="nofollow" href="https://github.com/ReactiveX/rxjs">RxJS</a> 处理复杂的用户输入，同时为此开发出另一项目 <a target="_blank" rel="nofollow" href="https://github.com/crimx/observable-hooks">observable-hooks</a>。</li>\n<li>使用 <a target="_blank" rel="nofollow" href="https://storybook.js.org">Storybook</a> 开发组件，在可视化环境中快速调试。</li>\n<li>在 React 上使用 <a target="_blank" rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM">Shadow DOM</a> 以较低成本隔离词典面板以及各个词典的样式。</li>\n<li>整合词典结果需要理解不同词典网页的设计，并从中总结出规律，稳定地为用户提炼展现有用的信息。</li>\n<li>自动化构建脚本，为此开发出专用脚手架插件 <a target="_blank" rel="nofollow" href="https://github.com/crimx/neutrino-webextension">neutrino-webextension</a>。代码结构多层抽象，添加词典采用插件式机制载入。</li>\n</ol>\n'},298:function(e,t){e.exports="<p>一个超小的库用于以紧凑、可复用、可测试的方式编写副作用代码。</p>\n"},299:function(e,t){e.exports='<p>可以让任何数据触发 Suspense 的 React hooks。</p>\n<hr class="read-more" />\n\n<p>为什么：</p>\n<p>如果使用 Relay Suspense 方式进行开发的话需要<a target="_blank" rel="nofollow" href="https://github.com/relayjs/relay-examples/blob/205dfb195c770e7cd3977116654bd69c91d03b90/issue-tracker/src/JSResource.js#L21-L42">对异步逻辑进行包装</a>然后在组件中使用 <a target="_blank" rel="nofollow" href="https://github.com/relayjs/relay-examples/blob/master/issue-tracker/src/JSResource.js#L54-L717">read()</a> 来<a target="_blank" rel="nofollow" href="https://github.com/relayjs/relay-examples/blob/205dfb195c770e7cd3977116654bd69c91d03b90/issue-tracker/src/SuspenseImage.js#L27">获取数据</a>。</p>\n<p>这意味着：</p>\n<ul>\n<li>这种方式只能应用到基于 Promise 的异步逻辑。</li>\n<li>逻辑编写和数据使用需要按照特定的方式。</li>\n<li>当从<code>read()</code>成功获得数据，这仅代表数据“成功返回”而不一定这个数据是“可用的”（除非在逻辑编写上做相应的规范要求两者一致）。所以获得数据后依然还要做各种判断验证数据。</li>\n</ul>\n<p><a target="_blank" rel="nofollow" href="https://github.com/crimx/use-suspensible">use-suspensible</a> 不在乎异步逻辑是怎么实现的，它只关心这个数据是否可用，不可用便触发 Suspense。这使到它是一种通用的 Suspense 解决方案。</p>\n<p>使用 <a target="_blank" rel="nofollow" href="https://github.com/crimx/use-suspensible">use-suspensible</a> 只需要按习惯的方式获取和使用数据即可，逻辑编写不需要做任何改变。</p>\n'},300:function(e,t){e.exports="<p>一个超小的库用于响应式编程。</p>\n"},301:function(e,t){e.exports='<p>获取浏览器扩展元数据，使用轻量、稳定、高效的方式。已被著名的开源徽章库 <a target="_blank" rel="nofollow" href="https://shields.io/">Shields.io</a> 和 <a target="_blank" rel="nofollow" href="https://badgen.net/chrome-web-store">Badgen</a> 采用。</p>\n'},302:function(e,t){e.exports='<p>适用于 Webpack 4 的 WebExtension Target 。利用原生 import 动态加载分块。</p>\n<hr class="read-more" />\n\n<p>Webpack 默认的 JSONP 机制无法在 WebExtension 的 content scripts 中动态加载分块。</p>\n<p>相关原理见我的文章<a target="_blank" rel="nofollow" href="https://blog.crimx.com/2020/03/29/%E8%87%AA%E5%AE%9A%E4%B9%89-webpack-target/">「自定义 Webpack Target」</a>。</p>\n<p>这个库已经内置到 <a target="_blank" rel="nofollow" href="https://github.com/crimx/neutrino-webextension">neutrino-webextension preset</a> 中。</p>\n'},303:function(e,t){e.exports='<p>一款可以分享网页到饭否、推特和微博的 Chrome / Firefox 扩展。并可以从网页中提取所有图片。</p>\n<hr class="read-more" />\n\n<ol>\n<li>对 OAuth 1a 与 2 的验证流程消化理解，并抽象出通用类利用模板模式支持各个平台（饭否与推特使用 OAuth 1a，微博使用 Oauth 2）。</li>\n<li>利用 <code>chrome.identity</code> 以及 content script 黑科技实现 OAuth 的无服务器自动授权。</li>\n<li>UI 完全基于 <a target="_blank" rel="nofollow" href="https://iviewui.com">iview</a> 。</li>\n<li>代码构建系统利用 webpack-chain 基于 vue-cli 展开，一键构建打包。</li>\n</ol>\n'}}]);